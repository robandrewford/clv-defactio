# Deployment Configuration Settings

# Environment Settings
environment:
  name: production  # or 'development', 'staging'
  region: us-central1
  project_id: your-project-id
  enable_monitoring: true

# Infrastructure Settings
infrastructure:
  # Compute Engine
  compute:
    machine_type: n1-standard-4
    gpu_type: NVIDIA_TESLA_T4
    gpu_count: 1
    disk_size_gb: 100
    disk_type: pd-ssd

  # Cloud Run
  cloud_run:
    min_instances: 1
    max_instances: 10
    cpu: 2
    memory: 4Gi
    timeout: 3600
    concurrency: 80

  # Vertex AI
  vertex_ai:
    endpoint_name: clv-prediction
    machine_type: n1-standard-4
    min_replicas: 1
    max_replicas: 5
    accelerator_type: NVIDIA_TESLA_T4
    accelerator_count: 1

# Networking
networking:
  vpc_name: clv-vpc
  subnet_name: clv-subnet
  region: us-central1
  ip_range: 10.0.0.0/24
  enable_private_google_access: true
  cloud_nat: true

# Security
security:
  # IAM
  service_accounts:
    compute: clv-compute@your-project.iam.gserviceaccount.com
    prediction: clv-prediction@your-project.iam.gserviceaccount.com

  # Security settings
  encryption:
    kms_key_ring: clv-keyring
    kms_key_name: clv-key
    kms_location: global

# Monitoring & Logging
monitoring:
  # Cloud Monitoring
  metrics:
    - prediction_requests
    - prediction_latency
    - error_rate
    - model_accuracy

  # Alerting
  alerts:
    error_rate:
      threshold: 0.01
      duration: 300s
    latency:
      threshold: 1000ms
      duration: 300s

  # Logging
  logging:
    log_level: INFO
    retention_days: 30
    export_logs: true
    destination_bucket: gs://your-project-logs

# Scaling
scaling:
  autoscaling:
    enable: true
    min_instances: 1
    max_instances: 10
    cpu_target: 0.6
    scaling_cooldown: 300

# Load Balancing
load_balancing:
  enable: true
  type: EXTERNAL_MANAGED
  protocol: HTTPS
  session_affinity: true
  health_check:
    check_interval_sec: 10
    timeout_sec: 5
    healthy_threshold: 2
    unhealthy_threshold: 3

# Deployment Strategy
deployment:
  strategy: rolling  # or 'blue_green', 'canary'
  rollback_enabled: true
  max_surge: 1
  max_unavailable: 0
  min_ready_sec: 30

  # For canary deployments
  canary:
    initial_percent: 10
    increment_percent: 20
    interval_minutes: 30

# Backup & Recovery
backup:
  enable: true
  schedule: "0 0 * * *"  # Daily at midnight
  retention_days: 30
  backup_bucket: gs://your-project-backups

# Cost Management
cost_management:
  budget_amount: 1000
  currency: USD
  alert_threshold_percentages:
    - 50
    - 80
    - 90
    - 100

# API Configuration
api:
  version: v1
  base_path: /api/v1
  rate_limiting:
    requests_per_minute: 1000
    burst_size: 50
  cors:
    enabled: true
    allowed_origins:
      - https://your-domain.com
    allowed_methods:
      - GET
      - POST
