apiVersion: apps/v1
kind: Deployment
metadata:
  name: clv-service
  namespace: clv-360
  labels:
    app: clv-service
    environment: ${ENVIRONMENT}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: clv-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: clv-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: clv-service-sa
      containers:
      - name: clv-service
        image: gcr.io/${PROJECT_ID}/clv-service:${VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: "1"
        env:
        - name: ENVIRONMENT
          value: ${ENVIRONMENT}
        - name: PROJECT_ID
          value: ${PROJECT_ID}
        - name: VERTEX_ENDPOINT
          value: ${VERTEX_ENDPOINT}
        - name: STORAGE_BUCKET
          value: ${STORAGE_BUCKET}
        envFrom:
        - configMapRef:
            name: clv-config
        - secretRef:
            name: clv-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: model-storage
          mountPath: /models
        - name: google-cloud-key
          mountPath: /var/secrets/google
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: google-cloud-key
        secret:
          secretName: google-cloud-key
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
